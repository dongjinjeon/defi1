version: "2"

services:
  EthereumMainnet:
    image: "webcgi/coin:pos1"
    tty: true
    ports:
      - 8545:8545
      - 30303:30303
    environment:
      ENV: ETHERNODE1
      RPCPORT: 8545
      PORT: 30303
    volumes:
      - ./config1.toml:/ethereum/config.toml
      - ./genesis.json:/ethereum/genesis.json
      - ./password:/ethereum/password
      - ./nodes:/ethereum/nodes
      - ./keys1:/ethereum/keys
    container_name: POSA1
    command: >
      sh -c "cd ~/
            parity --config /ethereum/config.toml --geth"
    working_dir: /ethereum

  EthereumTestnet:
    image: "webcgi/coin:pos2"
    tty: true
    ports:
      - 8546:8545
      - 30304:30303
    environment:
      ENV: ETHERNODE2
      RPCPORT: 8545
      PORT: 30303
    volumes:
      - ./config2.toml:/ethereum/config.toml
      - ./genesis.json:/ethereum/genesis.json
      - ./password:/ethereum/password
      - ./nodes:/ethereum/nodes
      - ./keys2:/ethereum/keys
    container_name: POSA2
    command: >
      sh -c "cd ~/
            parity --config /ethereum/config.toml --geth"
    working_dir: /ethereum

SCAN1:
    image: "webcgi/coin:scan"
    ports:
      - 3012:3000
    restart: always
    depends_on:
      - DB1
    links:
      - POSA1:POSA2
    volumes:
      - ./config1.json:/config.json
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      MONGO_URI: mongodb://host.docker.internal/blockDB
    command : bash -c "/wait-for-it.sh -h mongo -p 27017 -t 30 -- npm run start"
    
DB1:
    image: "webcgi/coin:mongo"
    depends_on:
      - POSA1
      - POSA2

    ports: 
      - 27017:27017
    volumes:
      - ./data:/data/db
    environment:
      MONGO_INITDB_DATABASE: "[blockDB, GGOM1, HEINI1, ONE1]"